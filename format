#!/usr/bin/env python3

import sys


def format_bytes(value: str):
    try:
        size = int(value)
    except ValueError:
        print("Invalid value specified!")
        sys.exit(1)

    power = 2**10
    n = 0
    power_labels = {0: "", 1: "K", 2: "M", 3: "G", 4: "T"}
    while size > power:
        size /= power
        n += 1
    return f"{size:.2f} {power_labels[n]}B"


def format_fstring(value: str):
    value, format_spec = value.split(":", 1)
    return format(eval(value), format_spec)


if __name__ == "__main__":
    value = input()

    formatters = {
        "bytes": format_bytes,
        "fstring": format_fstring,
    }

    try:
        formatter = sys.argv[sys.argv.index("-f") + 1]
    except ValueError:
        print("No format specified!")
        sys.exit(1)

    if formatter not in formatters:
        print(
            "Unknown format specified! Supported formats are:",
            ", ".join(formatters.keys()),
        )
        sys.exit(1)

    print(formatters[formatter](value))
